#!/bin/bash

# -------------------------------------------------------------------
# Script de d√©marrage pour l'application de biblioth√®que
# Usage : ./start.sh [--build] [--logs] [--stop]
# -------------------------------------------------------------------

# Variables
COMPOSE_FILE="docker-compose.yml"
APP_NAME="biblio-api"
LOG_FILE="docker.log"
VENV_DIR="venv"

# Fonctions
show_help() {
  echo "Usage: $0 [OPTIONS]"
  echo
  echo "Options:"
  echo "  --build     Reconstruit les images Docker avant d√©marrage"
  echo "  --logs      Affiche les logs en temps r√©el"
  echo "  --stop      Arr√™te les conteneurs et nettoie"
  echo "  --help      Affiche cette aide"
  echo
  echo "Exemples:"
  echo "  ./start.sh --build --logs  # Fresh install avec affichage des logs"
  echo "  ./start.sh --stop          # Nettoyage compl√®te"
}

check_docker() {
  if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©. Veuillez installer Docker avant de continuer."
    exit 1
  fi

  if ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose V2 n'est pas install√©. Veuillez mettre √† jour Docker."
    exit 1
  fi
}

check_venv() {
  if [ ! -d "$VENV_DIR" ]; then
    echo "‚ùå L'environnement virtuel '$VENV_DIR' n'existe pas. Veuillez le cr√©er avec :"
    echo "  python -m venv venv"
    exit 1
  fi
  echo "‚úÖ L'environnement virtuel '$VENV_DIR' est pr√™t."
}

start_services() {
  echo "üîÑ D√©marrage des services..."
  
  if [ "$1" == "--build" ]; then
    echo "üõ†Ô∏è  Reconstruction des images Docker..."
    docker compose -f "$COMPOSE_FILE" build --no-cache
  fi
  
  # D√©marrage des services en arri√®re-plan
  docker compose -f "$COMPOSE_FILE" up -d

  # V√©rification du statut de Docker et affichage des logs si n√©cessaire
  if [ "$2" == "--logs" ]; then
    echo "üìú Affichage des logs (CTRL+C pour quitter)..."
    docker compose -f "$COMPOSE_FILE" logs -f
  else
    echo "‚úÖ Les docker des bases de donn√©es sont bien lanc√©s :"
    echo " - pgAdmin:    http://localhost:5050"
    echo " - Mongo-UI:   http://localhost:8081"
    echo
    echo "Lancer l'application en activant l'environnement virtuel :"
    echo "source venv/bin/activate"
    echo "uvicorn app.main:app --reload"
    echo 
    echo " - API:        http://localhost:8000/docs"
  fi
}

stop_services() {
  echo "üõë Arr√™t des services..."
  docker compose -f "$COMPOSE_FILE" down --volumes --remove-orphans
  echo "üßπ Nettoyage termin√©"
}

# Main
check_docker
check_venv

case "$1" in
  --help)
    show_help
    ;;
  --stop)
    stop_services
    ;;
  *)
    start_services "$1" "$2"
    ;;
esac
